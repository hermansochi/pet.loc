version: "3.9"
services:
    traefik:
        image: traefik:2.4
        command:
            --providers.docker=true
            --providers.docker.exposedByDefault=false
            --entryPoints.http.address=:80
        ports:
            - "80:80"
        networks:
            - traefik-public
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public

    api:
        build:
            context: api/docker
            dockerfile: development/nginx/Dockerfile
        volumes:
            - ./api:/app:rw
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.api.rule=Host(`api.localhost`)
            - traefik.http.routers.api.entryPoints=http
            - traefik.http.services.api.loadBalancer.server.port=80

    api-php-fpm:
        build:
            context: api/docker
            dockerfile: development/php-fpm/Dockerfile
        volumes:
            - ./api:/app:rw

    api-php-cli:
        build:
            context: api/docker
            dockerfile: development/php-cli/Dockerfile
        volumes:
            - ./api:/app:rw

    react-node:
        build:
            context: react/docker/development/node
        environment:
            WDS_SOCKET_PORT: 0
        volumes:
            - ./react:/app:rw
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
        tty: true

    react-node-cli:
        build:
            context: react/docker/development/node
        volumes:
            - ./react:/app

    react:
        build:
            context: react/docker/development/nginx
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.react.rule=Host(`react.localhost`) || Host(`www.react.localhost`)
            - traefik.http.routers.react.entryPoints=http
            - traefik.http.services.react.loadBalancer.server.port=80

    underdante-node:
        build:
            context: underdante/docker/development/node
        environment:
            WDS_SOCKET_PORT: 0
        volumes:
            - ./underdante:/app:rw
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
        tty: true

    underdante-node-cli:
        build:
            context: underdante/docker/development/node
        volumes:
            - ./underdante:/app

    underdante:
        build:
            context: underdante/docker/development/nginx
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.underdante.rule=Host(`underdante.localhost`) || Host(`www.underdante.localhost`)
            - traefik.http.routers.underdante.entryPoints=http
            - traefik.http.services.underdante.loadBalancer.server.port=80

    vue-node:
        build:
            context: vue/docker/development/node
        environment:
            WDS_SOCKET_PORT: 0
        volumes:
            - ./vue:/app:rw
        command: npm run dev
        tty: true

    vue-node-cli:
        build:
            context: vue/docker/development/node
        volumes:
            - ./vue:/app

    vue:
        build:
            context: vue/docker/development/nginx
        volumes:
            - ./vue:/app:rw
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.vue.rule=Host(`vue.localhost`) || Host(`www.vue.localhost`)
            - traefik.http.routers.vue.entryPoints=http
            - traefik.http.services.vue.loadBalancer.server.port=80

    api-postgres:
        image: postgres:13.3-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: app
        volumes:
            - api-postgres:/var/lib/postgresql/data
        ports:
            - "54321:5432"
volumes:
    api-postgres:

networks:
    traefik-public:
        name: traefik-public